[dependency-groups]
codspeed = ["pytest-codspeed>=2.2.0"]
cuda = [
  "jax[cuda]>=0.7.2",
]
dev = [
  {include-group = "codspeed"},
  {include-group = "docs"},
  {include-group = "tests"},
  "bump-my-version>=0.20.3",
  "maturin-import-hook>=0.3.0",
  "pre-commit>=3.5.0",
]
docs = [
  {include-group = "sionna"},
  "differt[all]",
  "beartype>=0.20",
  "myst-nb>=0.17.2",
  "pillow>=10.1.0",
  "plotly<6",
  "sphinx>=8.1.3",
  "sphinx-autodoc-typehints>=1.23",
  "sphinx-book-theme>=1.1.3",
  "sphinx-copybutton>=0.5.2",
  "sphinx-design>=0.5.0",
  "sphinx-remove-toctrees>=0.0.3",
  "sphinxext-opengraph>=0.9.0",
  "sphinxcontrib-apidoc>=0.4.0",
  "sphinxcontrib-bibtex>=2.6.0",
  "sphinx-plotly-directive>=0.1.3",
]
icmlcn2025 = [
  # For ICMLCN2025 tag
  "differt[all]",
  "e3x>=1.0.2",
]
profiling = [
  "tensorboard-plugin-profile>=2.20.1",
  "tensorflow>=2.19.0",
]
sionna = [
  "sionna-rt==1.1.0;sys_platform=='linux'",
]
tests = [
  "differt",
  "beartype>=0.20",
  "chex>=0.1.84",
  "pytest>=7.4.3,<8.3.5",
  "pytest-benchmark>=4.0.0",
  "pytest-cov>=4.1.0",
  "pytest-env>=1.1.3",
  "pytest-missing-modules>=0.2.0",
  "pytest-subtests>=0.14.1",
  "pytest-xdist>=3.3.1",
  "scipy>=1.12.0",
]
tests-extended = [
  {include-group = "sionna"},
  {include-group = "tests"},
  "differt[all]",
  "open3d-cpu>=0.19.0;python_version<'3.13' and sys_platform=='linux'",
]
tests-matplotlib = [
  {include-group = "tests"},
  "differt[matplotlib]",
]
tests-plotly = [
  {include-group = "tests"},
  "differt[plotly]",
]
tests-vispy = [
  {include-group = "tests"},
  "differt[vispy,vispy-backend]",
]

[project]
authors = [{name = "Jérome Eertmans", email = "jeertmans@icloud.com"}]
dependencies = []
name = "differt-dev"
requires-python = ">=3.11"
version = "1.0.0"

[tool.bumpversion]
allow_dirty = false
commit = true
commit_args = ""
current_version = "0.6.0"
ignore_missing_version = false
message = "chore(deps): bump version from {current_version} to {new_version}"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
regex = false
replace = "{new_version}"
search = "{current_version}"
serialize = ["{major}.{minor}.{patch}"]
sign_tags = false
tag = false
tag_message = "Bump version: {current_version} → {new_version}"
tag_name = "v{new_version}"

[[tool.bumpversion.files]]
filename = "differt-core/Cargo.toml"
replace = 'version = "{new_version}"'
search = 'version = "{current_version}"'

[[tool.bumpversion.files]]
filename = "differt/pyproject.toml"
replace = "differt-core=={new_version}"
search = "differt-core=={current_version}"

[[tool.bumpversion.files]]
filename = "Cargo.lock"
replace = '''name = "differt-core"
version = "{new_version}"'''
search = '''name = "differt-core"
version = "{current_version}"'''

[[tool.bumpversion.files]]
filename = "uv.lock"
ignore_missing_version = true  # lock file sometimes contains version, sometime not
replace = '''name = "differt"
version = "{new_version}"'''
search = '''name = "differt"
version = "{current_version}"'''

[[tool.bumpversion.files]]
filename = "uv.lock"
ignore_missing_version = true  # see above
replace = '''name = "differt-core"
version = "{new_version}"'''
search = '''name = "differt-core"
version = "{current_version}"'''

[[tool.bumpversion.files]]
filename = "CITATION.cff"
replace = "version: v{new_version}"
search = "version: v{current_version}"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
replace = "v{new_version}"
search = "Unreleased"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
replace = "v{current_version}...v{new_version}"
search = "v{current_version}...HEAD"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
replace = ""
search = '''
<!-- start changelog -->

'''

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
replace = '''## [Unreleased](https://github.com/jeertmans/DiffeRT/compare/v{new_version}...HEAD)

<!-- start changelog -->

## [{new_version}]'''
search = '''## [v{new_version}]'''

[[tool.bumpversion.files]]
filename = "README.md"
replace = 'version = {{v{new_version}}}'
search = 'version = {{v{current_version}}}'

[tool.codespell]
builtin = "clear,rare,informal,usage,names,en-GB_to_en-US"
check-hidden = true
ignore-words-list = "crate,serialisation,ue,UEs"
skip = "docs/source/conf.py,docs/source/references.bib,pyproject.toml,uv.lock"

[tool.coverage.report]
exclude_lines = [
  'pragma: no cover',
  'raise NotImplementedError',
  'if TYPE_CHECKING:',
  'if typing.TYPE_CHECKING:',
]
precision = 2

[tool.coverage.run]
omit = ["**/*/conftest.py"]

[tool.pyright]
include = ["differt/src/differt", "differt/tests", "differt-core/src/differt_core"]
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = false  # Incompatible with eqx.AbstractVar
reportMissingTypeArgument = true
reportUnnecessaryTypeIgnoreComment = true
venv = ".venv"
venvPath = "."

[tool.pytest.ini_options]
addopts = [
  "--jaxtyping-packages=differt,beartype.beartype(conf=beartype.BeartypeConf(strategy=beartype.BeartypeStrategy.On))",
  "--numprocesses=logical",
  "--cov-report=xml",
  "--cov=differt/src/differt",
  "--cov=differt-core/python/differt_core",
  "--import-mode=importlib",
  "--doctest-modules",
  "--doctest-ignore-import-errors",
  "--doctest-glob=*.md",
  "--doctest-glob=*.rst",
  "--benchmark-columns=mean,stddev,ops,iterations",
  "--benchmark-group-by=group",
  "--benchmark-warmup=on",
  "--benchmark-disable",
]
doctest_optionflags = ["NORMALIZE_WHITESPACE"]
env = [
  "JAX_DEBUG_NANS=True",
  "JAX_PLATFORM_NAME=cpu",
]
filterwarnings = [
  "error",
  'ignore:datetime\.datetime\.utcfromtimestamp\(\) is deprecated:DeprecationWarning',  # Python 3.12
  '''ignore:Signature.*for <class 'numpy.longdouble'> does not match any known type:UserWarning''',
  'ignore:You are using an old version of Python:UserWarning',  # Warning for tarfile.TarFile.extractall
]
log_level = "INFO"
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "serial",
]

[tool.ruff]
extend-include = ["*.ipynb"]

[tool.ruff.format]
docstring-code-format = true
preview = true

[tool.ruff.lint]
extend-ignore = [
  "ANN401",  # any-type
  "C901",  # complex-structure
  "COM812",  # missing-trailing-comma, conflicts with formatter
  "COM819",  # prohibited-trailing-comma, conflicts with formatter
  "CPY001",  # missing-copyright-notice
  "D203",  # no-blank-line-before-class
  "D206",  # indent-with-spaces, conflicts with formatter
  "D212",  # multi-line-summary-second-line
  "D300",  # triple-single-quotes, conflicts with formatter
  "D407",  # dashed-underline-after-section
  "E111",  # indentation-with-invalid-multiple, conflicts with formatter
  "E114",  # indentation-with-invalid-multiple-comments, conflicts with formatter
  "E117",  # over-indented, conflicts with formatter
  "E501",  # line-too-long, conflicts with formatter
  "F722",  # forward-annotation-syntax-error
  "FA100",  # future-rewritable-type-annotation
  "FBT001",  # boolean-type-hint-positional-argument
  "FBT002",  # boolean-default-value-positional-argument
  "FIX002",  # line-contains-todo, comment this to find where TODOs are
  "ISC001",  # single-line-implicit-string-concatenation, conflicts with formatter
  "ISC002",  # multi-line-implicit-string-concatenation, conflicts with formatter
  "PD",  # pandas-vet
  "PLR0904",  # too-many-public-methods, counts @overload...
  "PLR091",  # too-many-*
  "PLR6104",  # non-augmented-assignment
  "Q000",  # bad-quotes-inline-string, conflicts with formatter
  "Q001",  # bad-quotes-multiline-string, conflicts with formatter
  "Q002",  # bad-quotes-docstring, conflicts with formatter
  "Q003",  # avoidable-escaped-quote, conflicts with formatter
  "TD002",  # missing-todo-author, I am currently the only author
  "TD003",  # missing-todo-link
  "W191",  # tab-indentation, conflicts with formatter
]
isort = {known-first-party = ["differt", "differt_core", "tests"]}
preview = true
select = ["ALL"]

[tool.ruff.lint.flake8-boolean-trap]
extend-allowed-calls = ["jax.numpy.array"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["equinox.field", "jax.numpy.array"]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["T"]

[tool.ruff.lint.per-file-ignores]
"**.ipynb" = [
  "B018",
  "ERA001",  # TODO: remove commented code in notebook
  "N806",
  "PLR2004",  # TODO: remove this
  "PLW2901",  # TODO: remove this
  "RUF027",
  "T201",
]
"**/tests/*" = ["PLC2701", "PLR0917", "PLR2004", "PLR6301", "SIM117", "TID252"]
"**/{docs,tests}/*" = ["D", "DOC", "S101"]
"differt/src/differt/conftest.py" = ["D", "DOC"]
"scripts/*" = ["INP001"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.uv]
required-version = ">=0.5.26"  # See: https://github.com/astral-sh/uv/pull/11075

[tool.uv.sources]
differt = {workspace = true}

[tool.uv.workspace]
members = ["differt", "differt-core"]
